<iscontent type="text/html" charset="UTF-8" compact="true"/>

<iscomment>
    This template is useful in order to mutualize product data creation that will be
    used then for the GTM dataLayer.

    /!\ Warning /!\ : only include this template if you have a pdict.Product variable
</iscomment>

<script>
function parseQueryString(query) {
    var vars = query.split("&");
    var query_string = {};
    for (var i = 0; i < vars.length; i++) {
        var pair = vars[i].split("=");
        var key = decodeURIComponent(pair[0]);
        var value = decodeURIComponent(pair[1]);
        // If first entry with this name
        if (typeof query_string[key] === "undefined") {
            query_string[key] = decodeURIComponent(value);
            // If second entry with this name
        } else if (typeof query_string[key] === "string") {
            var arr = [query_string[key], decodeURIComponent(value)];
            query_string[key] = arr;
            // If third or later entry with this name
        } else {
            query_string[key].push(decodeURIComponent(value));
        }
    }
    return query_string;
}

var query = window.location.search.substring(1);
var qs = parseQueryString(query);
var gtmList = '';

if (document.getElementsByClassName('search-result-options').length === 0) {
    gtmList = 'PDP';
} else {
    gtmList = ("q" in qs) ? 'Search Result' : 'Catalog';
}

var currentIndex = 0;
var pdpData = [];
var pdpCurrency = '<isprint value="${session.getCurrency().getCurrencyCode()}" />';
</script>

<isscript>
let product = pdict.Product;

let products = [];
let results = [];

if (product.productSet) {
    products = product.getProductSetProducts();
} else {
    products.push(product);
}
</isscript>

<isloop items="${products}" var="CurrentProduct" status="loopstate">
    <isscript>
        let masterId = CurrentProduct.isVariant() || CurrentProduct.isVariationGroup() ? CurrentProduct.getMasterProduct().getID() : CurrentProduct.getID();

        let primaryCatID = "";
        if (!empty(CurrentProduct.primaryCategory)) {
            primaryCatID = CurrentProduct.primaryCategory.getID();
        } else if (!CurrentProduct.isMaster()) {
            primaryCatID = CurrentProduct.getVariationModel().getMaster().getPrimaryCategory().getID();
        }

        let definitivePrice = 0;
        let PriceModel = CurrentProduct.getPriceModel();
        let SalesPrice = PriceModel.getPrice();

        if (CurrentProduct.productSet) {
        } else if (CurrentProduct.master || CurrentProduct.variationGroup) {
            definitivePrice = CurrentProduct.priceModel.minPrice.getDecimalValue().toString().replace(',','.');
        } else if (SalesPrice.valueOrNull != null && SalesPrice.valueOrNull > 0) {
            definitivePrice = SalesPrice.getDecimalValue().toString().replace(',','.');
        }
    </isscript>

    <script>
    pdpData.push({
        'name': '<isprint value="${CurrentProduct.getName()}" />',
        'id': '<isprint value="${masterId}" />',
        'price': '<isprint value="${definitivePrice}" />',
        'brand': '<isprint value="${CurrentProduct.getBrand()}" />',
        'category': '<isprint value="${primaryCatID}" />'
    });
    </script>
</isloop>

<script>
dataLayer.push({
    'ecommerce': {
        'detail': {
            'actionField': {'list': gtmList}, // 'detail' actions have an optional list property.
            'products': pdpData
        }
    }
});
</script>

